#include<bits/stdc++.h>
using namespace std;
class fraction
{
public:
    int numerator;
    int denominator;
    fraction()
    {
        numerator=0;
        denominator=0;
    }
    fraction(int a, int b)
    {
        numerator=a;
        denominator=b;
        if(denominator==0){
            cout<<"output will be negative"<<endl;
        }
        else{
            cout<<"denominator is no zero"<<endl;
        }
    }
      void str()
    {
        if(numerator!=0&&denominator!=0)
        {
            cout<<numerator<<"/"<<denominator<<endl;
        }
    }
    fraction (const fraction &t)
    {
        numerator=t.numerator;
        denominator=t.denominator;
    }
    void reduce()
    {
        int a=abs(numerator);
        for(int i=1; i<=a; i++)
        {
            for(int j=2; j<=a; j++)
            {
                if(numerator%j==0&&denominator%j==0)
                {
                    numerator=numerator/j;
                    denominator=denominator/j;
                }
            }
        }
    }
    fraction operator + (const fraction &r)
    {
        if(numerator!=0&&denominator!=0)
        {
            fraction p;
            int a= p.numerator=numerator+r.numerator;
            int b= p.denominator=denominator+r.denominator;
            cout<<"New Fraction With The Result Of The Addition "<<endl;
            cout<<a<<"/"<<b<<endl;
            cout<<"Lowest Term Of The New Fraction "<<endl;
            p.reduce();
            return p;
        }
    }
    };
    int main()
    {
        fraction self(15,45);
        fraction other=self;
        fraction add=self+other;
        add.str();
        return 0;
    }
